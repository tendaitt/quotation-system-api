swagger: "2.0"

info:
    description: "Quotation System API server."
    version: "1.0.0"
    title: "Quotation System API"

basePath: "/v1"

tags:
- name: "customer"
  description: "Access to customer information"
- name: "inventory"
  description: "Manage inventory"
- name: "user"
  description: "Operations that can be carried out by user"
- name: "quote"
  description: "Manage quotes"

schemes:
- "https"
- "http"

paths:
    /customer:
        post:
            tags:
            - "customer"
            summary: "Add a new customer"
            description: ""
            operationId: "add_customer"
            consumes:
            - "application/json"
            produces:
            - "application/json"
            parameters:
            - in: "body"
              name: "body"
              description: "Customer that needs to be added"
              required: true
              schema:
                $ref: "#/definitions/Customer"
            responses:
                201:
                    description: "New customer was succesfully created"
                405:
                    description: "Invalid input"
            x-swagger-router-controller: "src.customers.views"
        put:
            tags:
            - "customer"
            summary: "Update an existing customer"
            description: ""
            operationId: "update_customer"
            consumes:
            - "application/json"
            produces:
            - "application/json"
            parameters:
            - in: "body"
              name: "body"
              description: "Customer object to be added"
              required: true
              schema:
                $ref: "#/definitions/Customer"
            responses:
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Customer not found"
                405:
                    description: "Validation exception"
            x-swagger-router-controller: "src.customers.views"

    /customer/{customerID}:
        get:
            tags:
            - "customer"
            summary: "Find customer by ID"
            description: "Returns a single customer"
            operationId: "get_customer_by_id"
            produces:
            - "application/json"
            parameters:
            - name: "customerID"
              in: "path"
              description: "ID of customer to return"
              required: true
              type: "integer"
              format: "int64"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/Customer"
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Customer not found"
            x-swagger-router-controller: "src.customers.views"
        delete:
            tags:
            - "customer"
            summary: "Deletes a customer"
            description: ""
            operationId: "delete_customer"
            produces:
            - "application/json"
            parameters:
            - name: "customerID"
              in: "path"
              description: "Customer ID to delete"
              required: true
              type: "integer"
              format: "int64"
            responses:
                200:
                    description: "Customer was succesfully deleted"
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Customer not found"
            x-swagger-router-controller: "src.customers.views"

    /customer/all:
        get:
            tags:
            - "customer"
            summary: "Get all customers"
            description: "Returns all customers"
            operationId: "get_all_customers"
            produces:
            - "application/json"
            parameters: []
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        type: "array"
                        items:
                            $ref: "#/definitions/Customer"
            x-swagger-router-controller: "src.customers.views"

    /inventory:
        post:
            tags:
            - "inventory"
            summary: "Add a new product"
            description: ""
            operationId: "add_product"
            consumes:
            - "application/json"
            produces:
            - "application/json"
            parameters:
            - in: "body"
              name: "body"
              description: "Product that needs to be added"
              required: true
              schema:
                $ref: "#/definitions/Product"
            responses:
                405:
                    description: "Invalid input"
            x-swagger-router-controller: "src.inventory.views"
        put:
            tags:
            - "inventory"
            summary: "Update an existing product"
            description: ""
            operationId: "update_product"
            consumes:
            - "application/json"
            produces:
            - "application/json"
            parameters:
            - in: "body"
              name: "body"
              description: "Product that needs to be updated"
              required: true
              schema:
                $ref: "#/definitions/Product"
            responses:
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Product not found"
                405:
                    description: "Validation exception"
            x-swagger-router-controller: "src.inventory.views"

    /inventory/{productID}:
        get:
            tags:
            - "inventory"
            summary: "Find product by ID"
            description: "Returns a single product"
            operationId: "get_product_by_id"
            produces:
            - "application/json"
            parameters:
            - name: "productID"
              in: "path"
              description: "ID of product to return"
              required: true
              type: "integer"
              format: "int64"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/Product"
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Product not found"
            x-swagger-router-controller: "src.inventory.views"
        delete:
            tags:
            - "inventory"
            summary: "Deletes a product"
            description: ""
            operationId: "delete_product"
            produces:
            - "application/json"
            parameters:
            - name: "productID"
              in: "path"
              description: "ID of product to be deleted"
              required: true
              type: "integer"
              format: "int64"
            responses:
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Product not found"
            x-swagger-router-controller: "src.inventory.views"

    /inventory/all:
        get:
            tags:
            - "inventory"
            summary: "Get all products"
            description: "Returns all products"
            operationId: "get_all_products"
            produces:
            - "application/json"
            parameters: []
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        type: "array"
                        items:
                            $ref: "#/definitions/Product"
            x-swagger-router-controller: "src.inventory.views"

    /quote:
        post:
            tags:
            - "quote"
            summary: "Create a new quote"
            description: ""
            operationId: "create_quote"
            consumes:
            - "application/json"
            produces:
            - "application/json"
            parameters:
            - in: "body"
              name: "body"
              description: "Quote that needs to be created"
              required: true
              schema:
                $ref: "#/definitions/Quote"
            responses:
                405:
                    description: "Invalid input"
            x-swagger-router-controller: "src.quotes.views"

    /quote/{quoteID}:
        get:
            tags:
            - "quote"
            summary: "Find quote by ID"
            description: "Returns a single quote"
            operationId: "get_quote_by_id"
            produces:
            - "application/json"
            parameters:
            - name: "quoteID"
              in: "path"
              description: "ID of the quote to return"
              required: true
              type: "integer"
              format: "int64"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/Quote"
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Quote not found"
            x-swagger-router-controller: "src.quotes.views"
        delete:
            tags:
            - "quote"
            summary: "Deletes a quote"
            description: ""
            operationId: "delete_quote"
            produces:
            - "application/json"
            parameters:
            - name: "quoteID"
              in: "path"
              description: "ID of quote to be deleted"
              required: true
              type: "integer"
              format: "int64"
            responses:
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Quote not found"
            x-swagger-router-controller: "src.quotes.views"

    /quote/all:
        get:
            tags:
            - "quote"
            summary: "Get all quotes"
            description: "Returns all quotes"
            operationId: "get_all_quotes"
            produces:
            - "application/json"
            parameters: []
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        type: "array"
                        items:
                            $ref: "#/definitions/Quote"
            x-swagger-router-controller: "src.quotes.views"

    /user:
        post:
            tags:
            - "user"
            summary: "Register a new user"
            description: ""
            operationId: "new_user"
            consumes:
            - "application/json"
            produces:
            - "application/json"
            parameters:
            - in: "body"
              name: "body"
              description: "User that needs to be created"
              required: true
              schema:
                $ref: "#/definitions/User"
            responses:
                405:
                    description: "Invalid input"
            x-swagger-router-controller: "src.users.views"

    /user/login:
        get:
            tags:
            - "user"
            summary: "Logs users into the system"
            description: ""
            operationId: "login"
            produces:
            - "application/json"
            parameters:
            - name: "username"
              in: "query"
              description: "The username for login"
              required: true
              type: "string"
            - name: "password"
              in: "query"
              description: "The password for login"
              required: true
              type: "string"
            responses:
                200:
                    description: "successful operation"
                    schema:
                        type: "string"
                    headers:
                        X-Rate-Limit:
                            type: "integer"
                            format: "int32"
                            description: "calls per hour allowed by the user"
                        X-Expires-After:
                            type: "string"
                            format: "date-time"
                            description: "date in UTC when token expires"
                400:
                    description: "Invalid username/password supplied"
            x-swagger-router-controller: "src.users.views"

    /user/logout:
        get:
            tags:
            - "user"
            summary: "Logs out current logged in user session"
            description: ""
            operationId: "logout"
            produces:
            - "application/json"
            parameters: []
            responses:
                default:
                    description: "successful operation"
            x-swagger-router-controller: "src.users.views"

definitions:
    Customer:
        type: "object"
        required:
        - "first_name"
        - "last_name"
        properties:
            id:
                type: "integer"
                format: "int64"
            first_name:
                type: "string"
            last_name:
                type: "string"
            email:
                type: "string"
            phone_number:
                type: "string"
    Product:
        type: "object"
        required:
            - "name"
            - "quantity"
            - "price"
        properties:
            id:
                type: "integer"
                format: "int64"
            name:
                type: "string"
            description:
                type: "string"
            quantity:
                type: "integer"
                format: "int64"
            price:
                type: "integer"
                format: "int64"
    QuoteItem:
        type: "object"
        required:
            - "product_id"
            - "product_quantity"
            - "product_price"
        properties:
            id:
                type: "integer"
                format: "int64"
            product_id:
                type: "integer"
                format: "int64"
            product_quantity:
                type: "integer"
                format: "int64"
            product_price:
                type: "integer"
                format: "int64"
            quote_id:
                type: "integer"
                format: "int64"
    Quote:
        type: "object"
        required:
            - "customer_id"
            - "description"
            - "quote_items"
            - "date"
        properties:
            id:
                type: "integer"
                format: "int64"
            customer_id:
                type: "integer"
                format: "int64"
            description:
                type: "string"
            quote_items:
                type: "array"
                items:
                    $ref: "#/definitions/QuoteItem"
            date:
                type: "string"
                format: "date"
    User:
        type: "object"
        required:
            - "username"
            - "email"
            - "image_url"
        properties:
            id:
                type: "integer"
                format: "int64"
            username:
                type: "string"
            email:
                type: "string"
            image_url:
                type: "string"
