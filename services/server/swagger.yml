swagger: "2.0"

info:
    description: "Quotation System API server."
    version: "1.0.0"
    title: "Quotation System API"

basePath: "/v1"

tags:
- name: "customer"
  description: "Access to customer information"
- name: "inventory"
  description: "Manage inventory"
- name: "user"
  description: "Operations that can be carried out by user"
- name: "quote"
  description: "Manage quotes"

paths:
    /customer:
        post:
            tags:
            - "customer"
            summary: "Add a new customer"
            description: ""
            operationId: "src.api.add_customer"
            consumes:
            - "application/json"
            produces:
            - "application/json"
            parameters:
            - in: "body"
              name: "body"
              description: "Customer that needs to be added"
              required: true
              schema:
                $ref: "#/definitions/Customer"
            responses:
                405:
                    description: "Invalid input"
        put:
            tags:
            - "customer"
            summary: "Update an existing customer"
            description: ""
            operationId: "src.api.update_customer"
            consumes:
            - "application/json"
            produces:
            - "application/json"
            parameters:
            - in: "body"
              name: "body"
              description: "Customer object to be added"
              required: true
              schema:
                $ref: "#/definitions/Customer"
            responses:
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Customer not found"
                405:
                    description: "Validation exception"

    /customer/{customerID}:
        get:
            tags:
            - "customer"
            summary: "Find customer by ID"
            description: "Returns a single customer"
            operationId: "src.api.get_customer_by_id"
            produces:
            - "application/json"
            parameters:
            - name: "customerID"
              in: "path"
              description: "ID of customer to return"
              required: true
              type: "integer"
              format: "int64"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/Customer"
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Customer not found"
        delete:
            tags:
            - "customer"
            summary: "Deletes a customer"
            description: ""
            operationId: "src.api.delete_customer"
            produces:
            - "application/json"
            parameters:
            - name: "customerID"
              in: "path"
              description: "Customer ID to delete"
              required: true
              type: "integer"
              format: "int64"
            responses:
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Customer not found"

    /customer/all:
        get:
            tags:
            - "customer"
            summary: "Get all customers"
            description: "Returns all customers"
            operationId: "src.api.get_all_customers"
            produces:
            - "application/json"
            parameters: []
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        type: "array"
                        items:
                            $ref: "#/definitions/Customer"

    /inventory:
        post:
            tags:
            - "inventory"
            summary: "Add a new inventory item"
            description: ""
            operationId: "src.api.add_inventory_item"
            consumes:
            - "application/json"
            produces:
            - "application/json"
            parameters:
            - in: "body"
              name: "body"
              description: "Inventory item that needs to be added"
              required: true
              schema:
                $ref: "#/definitions/InventoryItem"
            responses:
                405:
                    description: "Invalid input"
        put:
            tags:
            - "inventory"
            summary: "Update an existing inventory item"
            description: ""
            operationId: "src.api.update_inventory_item"
            consumes:
            - "application/json"
            produces:
            - "application/json"
            parameters:
            - in: "body"
              name: "body"
              description: "Inventory item that needs to be updated"
              required: true
              schema:
                $ref: "#/definitions/InventoryItem"
            responses:
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Inventory item not found"
                405:
                    description: "Validation exception"
                        
    /inventory/{itemID}:
        get:
            tags:
            - "inventory"
            summary: "Find inventory item by ID"
            description: "Returns a single inventory item"
            operationId: "src.api.get_inventory_item_by_id"
            produces:
            - "application/json"
            parameters:
            - name: "itemID"
              in: "path"
              description: "ID of inventory item to return"
              required: true
              type: "integer"
              format: "int64"
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        $ref: "#/definitions/InventoryItem"
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Inventory item not found"
        delete:
            tags:
            - "inventory"
            summary: "Deletes an inventory item"
            description: ""
            operationId: "src.api.delete_inventory_item"
            produces:
            - "application/json"
            parameters:
            - name: "itemID"
              in: "path"
              description: "ID of inventory item to be deleted"
              required: true
              type: "integer"
              format: "int64"
            responses:
                400:
                    description: "Invalid ID supplied"
                404:
                    description: "Inventory item not found"

    /inventory/all:
        get:
            tags:
            - "inventory"
            summary: "Get all inventory items"
            description: "Returns all inventory items"
            operationId: "src.api.get_all_invetory_items"
            produces:
            - "application/json"
            parameters: []
            responses:
                200:
                    description: "Successful operation"
                    schema:
                        type: "array"
                        items:
                            $ref: "#/definitions/InventoryItem"

definitions:
    Customer:
        type: "object"
        required:
        - "first_name"
        - "last_name"
        properties:
            id:
                type: "integer"
                format: "int64"
            first_name:
                type: "string"
            last_name:
                type: "string"
            email:
                type: "string"
            phone_number:
                type: "string"
    InventoryItem:
        type: "object"
        required:
            - "name"
            - "quantity"
            - "price"
        properties:
            id:
                type: "integer"
                format: "int64"
            name:
                type: "string"
            description:
                type: "string"
            quantity:
                type: "integer"
                format: "int64"
            price:
                type: "integer"
                format: "int64"
